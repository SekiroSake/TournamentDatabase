{"name":"Tournamentdatabase","tagline":"","body":"#Introduction\r\n\r\nThis is a Python module that uses the PostgreSQL database to keep track of players and matches in aS wiss-style   game tournament.\r\n\r\n\r\n## Recommendation\r\nIt's better to run this on your virtual machine'\r\n\r\n## Initialization\r\nLog into your web server via SSH and be sure to have **Python 2** and **PostgreSQL** installed.\r\n\r\nTo initialize the required tables, run:\r\n\r\n```\r\n$ psql\r\n```\r\n```\r\n$ \\i tournament.sql\r\n```\r\n\r\nTo run a suite of unit tests, quit **PostgreSQL** with `\\q` and then:\r\n\r\n```\r\n$ python tournament_test.py\r\n```\r\n\r\n## Tables available\r\n\r\n**PLAYERS**\r\n\r\nIncludes the player's name and ID number.\r\n\r\n**MATCHES**\r\n\r\nALL match results are recorded here with a match ID numer and the resulting winner or loser.\r\n\r\n**VIEW_WINS** _(view)_\r\n\r\nKeeps track of the number of wins for each player.\r\n\r\n**VIEW_LOSSES** _(view)_\r\n\r\nKeeps track of the number of losses for each player.\r\n\r\n**VIEW_MATCHES** _(view)_\r\n\r\nKeeps track of the count of matches each player has played.\r\n\r\n## Running a tournament\r\n\r\nUse the available Python functions, in this recommended order, to coordinate a game:\r\n\r\nMETHOD | ACCEPTS | PURPOSE\r\n--- | --- | ---\r\nregisterPlayer(name) | _name as string_ | Adds a player to the database to be calculated in pairings and standings.\r\ncountPlayers() | _(no input)_ | Counts all registered players.\r\nswissPairings() | _(no input)_ | Returns a list of players grouped into pairs, arranged according to their current standings. Players are paired with those with about the same number of wins.\r\nreportMatch(winner, loser) | _winner as string_, _loser as string_ | Records the result of any given match. \r\nplayerStandings() | _(no input)_ | Returns the number of wins from all players. \r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}